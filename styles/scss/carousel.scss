/**
 * Carousel.sass
 * @author: Dang Van Thanh
 * @github: https://github.com/dangvanthanh/carousel.sass
 * @description: A Simple Carousel Pure CSS Using Sass
 * @version: 1.0.0
 */
 $boolean: true !default;
 $current:1;
 $labCol:rgb(255,255,255);
 $labBor:2px solid $labCol;
 %animation-default {
  opacity: 1 !important;
  z-index: 3;
}
@mixin animation-default-1($count) {
  // opacity: 1 !important;
  // z-index: 3;
  // transform:translateX($count*300px);
  @if $count >= -5 {
    left:$count*10%;
  } @else {
    left:-60%;
  }
}

@mixin carousel($items, $animation: 'default') {
  .carousel {
    width: 100%;
    position: relative;
    overflow: hidden;

    > input[type="radio"] {
      position: absolute;
      left: 0;
      opacity: 0;
      top: 0;

      // &:checked {
      //   ~ .carousel__items .carousel__item,
      //   ~ .carousel__prev > label,
      //   ~ .carousel__next > label {
      //     opacity: 1;
      //   }
      // }

      @for $i from 1 through $items {

        &:nth-child(#{$i}) {
          &:checked {
            @for $j from 1 through $items {
              ~ .carousel__items .carousel__item {
                &:nth-child(#{$j}) {
                  @include animation-default-1(1-$i);
                }
              }
            }
              ~ .carousel__prev {
                > label {
                  @if $i == 1 {
                    &:nth-child(#{$items}) {
                      @extend %animation-default;
                    }
                  } @else if $i == $items {
                    &:nth-child(#{$items - 1}) {
                      @extend %animation-default;
                    }
                  } @else {
                    &:nth-child(#{$i - 1}) {
                      @extend %animation-default;
                    }
                  }
                }
              }
  
              ~ .carousel__next {
                > label {
                  @if $i == $items {
                    &:nth-child(1) {
                      @extend %animation-default;
                    }
                  } @else {
                    &:nth-child(#{$i + 1}) {
                      @extend %animation-default;
                    }
                  }
                }
              }
  
              ~ .carousel__nav {
                > label {
                  &:nth-child(#{$i}) {
                    background: #ccc;
                    cursor: default;
                    pointer-events: none;
                  }
                }
              }
          }
        }
      }
    }

    &__items {
      margin: 0;
      padding: 0;
      list-style-type: none;
      width: 250%;
      height: auto;
      position: relative;
    }

    &__item {
      display:inline-block;
      position: relative;
      top: 0;
      left:0;
      margin-left:0.95rem;
      width: calc(10% - 1.3rem);
      height:auto;
      // z-index: 1;
      transition: all 1s;
      -webkit-transition: all 1s;
      // transition: opacity 2s;
      // -webkit-transition: opacity 2s;

      img {
        width: 100%;
        vertical-align: middle;
      }
      h3 {
        position:absolute;
        top:1rem;
        left:25%;
        width:50%;
        text-align:center;
        color:rgb(255,255,255);
        text-transform:capitalize;
        font-weight:300;
      }
    }

    &__prev,
    &__next {
      > label {
        border:  $labBor;
        border-radius: 50%;
        cursor: pointer;
        display: block;
        width: 30px;
        height: 30px;
        position: absolute;
        top: 50%;
        // transform: translateY(-50%);
        // -webkit-transform: translateY(-50%);
        transition: all .3s ease;
        -webkit-transition: all .3s ease;
        opacity: 0;
        z-index: 2;

        &:hover,
        &:focus {
          opacity: .5 !important;
        }

        &:before,
        &:after {
          content: "";
          position: absolute;
          width: inherit;
          height: inherit;
        }

        &:before {
          // background: linear-gradient(to top, #000 0%, #000 10%, rgba(51, 51, 51, 0) 10%),
          //             linear-gradient(to left, #000 0%, #000 10%, rgba(51, 51, 51, 0) 10%);
          border-right: $labBor;
          border-bottom: $labBor;
          width: 60%;
          height: 60%;
          top: 20%;
        }
      }
    }

    &__prev {
      > label {
        left: 2%;

        &:before {
          left: 35%;
          top: 20%;
          transform: rotate(135deg);
          -webkit-transform: rotate(135deg);
        }
      }
    }

    &__next {
      > label {
        right: 2%;

        &:before {
          left: 10%;
          transform: rotate(315deg);
          -webkit-transform: rotate(315deg);
        }
      }
    }

    &__nav {
      position: absolute;
      bottom: 3%;
      left: 0;
      text-align: center;
      width: 100%;
      z-index: 3;

      > label {
        border: 1px solid #fff;
        display: inline-block;
        border-radius: 50%;
        cursor: pointer;
        margin: 0 .125%;
        width: 20px;
        height: 20px;
      }
    }
  }
}

*,
*:before,
*:after {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
}

body {
  background: #fcfcfc;
  margin: 0;
}

.container {
  width: 90%;
  min-width: 95%;
  margin: 3rem auto;
}

@include carousel(10);